name: Ruby Rules
version: 0.0.1
schema: v1
rules:
  - Write tests for all new code; no changes should be accepted without test coverage.
  - Write test first using TDD, before implementing features.
  - Use Test Driven Development (TDD) techniques where possible.
  - Mock API calls in tests using Mocha; never make real API calls in tests.
  - Prioritize improving coverage for files with low coverage, especially data_fetcher.rb, github_client.rb, and html_generator.rb.
  - Run coverage reports with \`bundle exec rake coverage\` after changes.
  - Place test files in the \`test/\` directory.
  - Name test files with the \`_test.rb\` suffix.
  - Require \`test_helper\` at the top of each test file.
  - Use the pattern \`test_method_name\` for test methods.
  - Use \`mock\` and \`stubs\` from Mocha, \`setup\` and \`teardown\` for preparation, and fixtures from \`test/fixtures/\`.
  - Always add an empty line before each assertion method to comply with RuboCop's Minitest/EmptyLineBeforeAssertionMethods rule.
  - Follow the Single Responsibility Principle each method should do one thing.
  - Keep methods under 20 lines and cyclomatic complexity under 7.
  - Use descriptive method names.
  - Break long lines (>100 chars) with line continuations.
  - Use guard clauses and early returns for edge cases.
  - Extract validation, transformation, and complex conditionals into helper methods.
  - Use 2 spaces for indentation.
  - Keep lines under 100 chars.
  - Avoid trailing whitespace.
  - Use snake_case for methods/variables, CamelCase for classes/modules, SCREAMING_SNAKE_CASE for constants.
  - Use single quotes for strings without interpolation.
  - Use double quotes for strings with interpolation.
  - Add \`# frozen_string_literal:\ true\` at the top of each file.
  - Use early returns.
  - Group similar methods.
  - Document complex code.
  - Rescue specific exceptions and use descriptive messages.
  - Use your editor to spot and trim trailing whitespace.
  - Split tests with multiple assertions and ensure no new style violations.